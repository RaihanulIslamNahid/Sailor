{
  "version": 3,
  "sources": ["../../tweakpane-plugin-media/dist/tweakpane-plugin-media.js"],
  "sourcesContent": ["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.TweakpaneMediaPlugin = {}));\n})(this, (function (exports) { 'use strict';\n\n    function forceCast(v) {\n        return v;\n    }\n\n    const PREFIX = 'tp';\n    function ClassName(viewName) {\n        const fn = (opt_elementName, opt_modifier) => {\n            return [\n                PREFIX,\n                '-',\n                viewName,\n                'v',\n                opt_elementName ? `_${opt_elementName}` : '',\n                opt_modifier ? `-${opt_modifier}` : '',\n            ].join('');\n        };\n        return fn;\n    }\n\n    function parseObject(value, keyToParserMap) {\n        const keys = Object.keys(keyToParserMap);\n        const result = keys.reduce((tmp, key) => {\n            if (tmp === undefined) {\n                return undefined;\n            }\n            const parser = keyToParserMap[key];\n            const result = parser(value[key]);\n            return result.succeeded\n                ? Object.assign(Object.assign({}, tmp), { [key]: result.value }) : undefined;\n        }, {});\n        return forceCast(result);\n    }\n    function parseArray(value, parseItem) {\n        return value.reduce((tmp, item) => {\n            if (tmp === undefined) {\n                return undefined;\n            }\n            const result = parseItem(item);\n            if (!result.succeeded || result.value === undefined) {\n                return undefined;\n            }\n            return [...tmp, result.value];\n        }, []);\n    }\n    function isObject(value) {\n        if (value === null) {\n            return false;\n        }\n        return typeof value === 'object';\n    }\n    function createParamsParserBuilder(parse) {\n        return (optional) => (v) => {\n            if (!optional && v === undefined) {\n                return {\n                    succeeded: false,\n                    value: undefined,\n                };\n            }\n            if (optional && v === undefined) {\n                return {\n                    succeeded: true,\n                    value: undefined,\n                };\n            }\n            const result = parse(v);\n            return result !== undefined\n                ? {\n                    succeeded: true,\n                    value: result,\n                }\n                : {\n                    succeeded: false,\n                    value: undefined,\n                };\n        };\n    }\n    function createParamsParserBuilders(optional) {\n        return {\n            custom: (parse) => createParamsParserBuilder(parse)(optional),\n            boolean: createParamsParserBuilder((v) => typeof v === 'boolean' ? v : undefined)(optional),\n            number: createParamsParserBuilder((v) => typeof v === 'number' ? v : undefined)(optional),\n            string: createParamsParserBuilder((v) => typeof v === 'string' ? v : undefined)(optional),\n            function: createParamsParserBuilder((v) =>\n            typeof v === 'function' ? v : undefined)(optional),\n            constant: (value) => createParamsParserBuilder((v) => (v === value ? value : undefined))(optional),\n            raw: createParamsParserBuilder((v) => v)(optional),\n            object: (keyToParserMap) => createParamsParserBuilder((v) => {\n                if (!isObject(v)) {\n                    return undefined;\n                }\n                return parseObject(v, keyToParserMap);\n            })(optional),\n            array: (itemParser) => createParamsParserBuilder((v) => {\n                if (!Array.isArray(v)) {\n                    return undefined;\n                }\n                return parseArray(v, itemParser);\n            })(optional),\n        };\n    }\n    const ParamsParsers = {\n        optional: createParamsParserBuilders(true),\n        required: createParamsParserBuilders(false),\n    };\n    function parseParams(value, keyToParserMap) {\n        const result = ParamsParsers.required.object(keyToParserMap)(value);\n        return result.succeeded ? result.value : undefined;\n    }\n\n    function createNumberFormatter(digits) {\n        return (value) => {\n            return value.toFixed(Math.max(Math.min(digits, 20), 0));\n        };\n    }\n\n    const innerFormatter = createNumberFormatter(0);\n    function formatPercentage(value) {\n        return innerFormatter(value) + '%';\n    }\n\n    function constrainRange(value, min, max) {\n        return Math.min(Math.max(value, min), max);\n    }\n\n    function removeAlphaComponent(comps) {\n        return [comps[0], comps[1], comps[2]];\n    }\n\n    function zerofill(comp) {\n        const hex = constrainRange(Math.floor(comp), 0, 255).toString(16);\n        return hex.length === 1 ? `0${hex}` : hex;\n    }\n    function colorToHexRgbString(value, prefix = '#') {\n        const hexes = removeAlphaComponent(value.getComponents('rgb'))\n            .map(zerofill)\n            .join('');\n        return `${prefix}${hexes}`;\n    }\n    function colorToHexRgbaString(value, prefix = '#') {\n        const rgbaComps = value.getComponents('rgb');\n        const hexes = [rgbaComps[0], rgbaComps[1], rgbaComps[2], rgbaComps[3] * 255]\n            .map(zerofill)\n            .join('');\n        return `${prefix}${hexes}`;\n    }\n    function colorToFunctionalRgbString(value, opt_type) {\n        const formatter = createNumberFormatter(opt_type === 'float' ? 2 : 0);\n        const comps = removeAlphaComponent(value.getComponents('rgb', opt_type)).map((comp) => formatter(comp));\n        return `rgb(${comps.join(', ')})`;\n    }\n    function createFunctionalRgbColorFormatter(type) {\n        return (value) => {\n            return colorToFunctionalRgbString(value, type);\n        };\n    }\n    function colorToFunctionalRgbaString(value, opt_type) {\n        const aFormatter = createNumberFormatter(2);\n        const rgbFormatter = createNumberFormatter(opt_type === 'float' ? 2 : 0);\n        const comps = value.getComponents('rgb', opt_type).map((comp, index) => {\n            const formatter = index === 3 ? aFormatter : rgbFormatter;\n            return formatter(comp);\n        });\n        return `rgba(${comps.join(', ')})`;\n    }\n    function createFunctionalRgbaColorFormatter(type) {\n        return (value) => {\n            return colorToFunctionalRgbaString(value, type);\n        };\n    }\n    function colorToFunctionalHslString(value) {\n        const formatters = [\n            createNumberFormatter(0),\n            formatPercentage,\n            formatPercentage,\n        ];\n        const comps = removeAlphaComponent(value.getComponents('hsl')).map((comp, index) => formatters[index](comp));\n        return `hsl(${comps.join(', ')})`;\n    }\n    function colorToFunctionalHslaString(value) {\n        const formatters = [\n            createNumberFormatter(0),\n            formatPercentage,\n            formatPercentage,\n            createNumberFormatter(2),\n        ];\n        const comps = value\n            .getComponents('hsl')\n            .map((comp, index) => formatters[index](comp));\n        return `hsla(${comps.join(', ')})`;\n    }\n    function colorToObjectRgbString(value, type) {\n        const formatter = createNumberFormatter(type === 'float' ? 2 : 0);\n        const names = ['r', 'g', 'b'];\n        const comps = removeAlphaComponent(value.getComponents('rgb', type)).map((comp, index) => `${names[index]}: ${formatter(comp)}`);\n        return `{${comps.join(', ')}}`;\n    }\n    function createObjectRgbColorFormatter(type) {\n        return (value) => colorToObjectRgbString(value, type);\n    }\n    function colorToObjectRgbaString(value, type) {\n        const aFormatter = createNumberFormatter(2);\n        const rgbFormatter = createNumberFormatter(type === 'float' ? 2 : 0);\n        const names = ['r', 'g', 'b', 'a'];\n        const comps = value.getComponents('rgb', type).map((comp, index) => {\n            const formatter = index === 3 ? aFormatter : rgbFormatter;\n            return `${names[index]}: ${formatter(comp)}`;\n        });\n        return `{${comps.join(', ')}}`;\n    }\n    function createObjectRgbaColorFormatter(type) {\n        return (value) => colorToObjectRgbaString(value, type);\n    }\n    [\n        {\n            format: {\n                alpha: false,\n                mode: 'rgb',\n                notation: 'hex',\n                type: 'int',\n            },\n            stringifier: colorToHexRgbString,\n        },\n        {\n            format: {\n                alpha: true,\n                mode: 'rgb',\n                notation: 'hex',\n                type: 'int',\n            },\n            stringifier: colorToHexRgbaString,\n        },\n        {\n            format: {\n                alpha: false,\n                mode: 'hsl',\n                notation: 'func',\n                type: 'int',\n            },\n            stringifier: colorToFunctionalHslString,\n        },\n        {\n            format: {\n                alpha: true,\n                mode: 'hsl',\n                notation: 'func',\n                type: 'int',\n            },\n            stringifier: colorToFunctionalHslaString,\n        },\n        ...['int', 'float'].reduce((prev, type) => {\n            return [\n                ...prev,\n                {\n                    format: {\n                        alpha: false,\n                        mode: 'rgb',\n                        notation: 'func',\n                        type: type,\n                    },\n                    stringifier: createFunctionalRgbColorFormatter(type),\n                },\n                {\n                    format: {\n                        alpha: true,\n                        mode: 'rgb',\n                        notation: 'func',\n                        type: type,\n                    },\n                    stringifier: createFunctionalRgbaColorFormatter(type),\n                },\n                {\n                    format: {\n                        alpha: false,\n                        mode: 'rgb',\n                        notation: 'object',\n                        type: type,\n                    },\n                    stringifier: createObjectRgbColorFormatter(type),\n                },\n                {\n                    format: {\n                        alpha: true,\n                        mode: 'rgb',\n                        notation: 'object',\n                        type: type,\n                    },\n                    stringifier: createObjectRgbaColorFormatter(type),\n                },\n            ];\n        }, []),\n    ];\n\n    // Create a class name generator from the view name\n    // ClassName('tmp') will generate a CSS class name like `tp-tmpv`\n    const className$1 = ClassName('tmp');\n    // Custom view class should implement `View` interface\n    class PluginView$1 {\n        constructor(doc, config) {\n            // Params\n            this.params_ = config.params;\n            // Receive the bound value from the controller\n            this.value_ = config.value;\n            // Init id for monitor\n            this.value_.rawValue.id = this.value_.rawValue.src;\n            // Extensions\n            this.extensions_ = this.params_.extensions || '.jpg, .jpeg, .png, .webp, .avif';\n            // Create a root element for the plugin\n            this.element = this.createElement_(doc);\n            // Bind view props to the element\n            config.viewProps.bindClassModifiers(this.element);\n            // Header\n            this.head_ = this.createHead_(doc);\n            this.element.appendChild(this.head_);\n            this.monitor_ = this.createMonitor_(doc);\n            this.head_.appendChild(this.monitor_);\n            // Container\n            this.container_ = this.createContainer_(doc);\n            this.element.appendChild(this.container_);\n            // Input\n            this.input = this.createInput_(doc);\n            this.container_.appendChild(this.input);\n            // Label\n            this.label_ = this.createLabel_(doc);\n            this.container_.appendChild(this.label_);\n            // Image\n            this.image_ = this.createImage_();\n            this.container_.appendChild(this.image_);\n            // Bind\n            this.bindAll_();\n            // Events\n            this.setupEventListeners_();\n            // Apply the initial value\n            this.refresh_();\n            // Dispose\n            config.viewProps.handleDispose(() => {\n                this.removeEventListeners_();\n            });\n        }\n        refresh_() {\n            // Show Image in monitor\n            this.image_.setAttribute('src', this.value_.rawValue.src);\n            // Reset opacity\n            if (this.value_.rawValue.src) {\n                this.image_.style.opacity = '1';\n                this.label_.style.opacity = '0';\n            }\n            else {\n                this.label_.style.opacity = '1';\n            }\n            // Apply image id\n            this.monitor_.innerHTML = this.value_.rawValue.id;\n            // Display monitor\n            if (this.value_.rawValue.id && this.params_.showMonitor) {\n                this.head_.style.display = 'flex';\n            }\n        }\n        createElement_(doc) {\n            const element = doc.createElement('div');\n            element.classList.add(className$1());\n            element.style.position = 'relative';\n            element.style.height = `${this.params_.height || 100}px`;\n            return element;\n        }\n        createContainer_(doc) {\n            const container = doc.createElement('div');\n            container.classList.add(className$1('container'));\n            container.style.height = `${this.params_.height || 100}px`;\n            return container;\n        }\n        createHead_(doc) {\n            const head = doc.createElement('div');\n            head.classList.add(className$1('head'));\n            if (this.value_.rawValue.id && this.params_.showMonitor)\n                head.style.display = 'flex';\n            return head;\n        }\n        createMonitor_(doc) {\n            const monitor = doc.createElement('div');\n            monitor.classList.add(className$1('monitor'));\n            monitor.innerHTML = this.value_.rawValue.id;\n            return monitor;\n        }\n        createInput_(doc) {\n            const input = doc.createElement('input');\n            input.classList.add(className$1('input'));\n            input.setAttribute('id', 'image');\n            input.setAttribute('type', 'file');\n            input.setAttribute('accept', this.extensions_);\n            return input;\n        }\n        createLabel_(doc) {\n            const label = doc.createElement('label');\n            label.setAttribute('for', 'image');\n            label.classList.add(className$1('label'));\n            label.innerHTML = '<span>Import image</span>';\n            return label;\n        }\n        createImage_() {\n            const image = new Image();\n            image.style.position = 'absolute';\n            image.style.pointerEvents = 'none';\n            image.style.left = '0';\n            image.style.top = '0';\n            image.style.width = '100%';\n            image.style.height = '100%';\n            image.style.objectFit = this.params_.objectFit || 'cover';\n            return image;\n        }\n        bindAll_() {\n            this.valueChangedHandler_ = this.valueChangedHandler_.bind(this);\n            this.dragenterHandler_ = this.dragenterHandler_.bind(this);\n            this.dragleaveHandler_ = this.dragleaveHandler_.bind(this);\n            this.mouseenterHandler_ = this.mouseenterHandler_.bind(this);\n            this.mouseleaveHandler_ = this.mouseleaveHandler_.bind(this);\n        }\n        setupEventListeners_() {\n            this.value_.emitter.on('change', this.valueChangedHandler_);\n            this.input.addEventListener('dragenter', this.dragenterHandler_);\n            this.input.addEventListener('dragleave', this.dragleaveHandler_);\n            this.input.addEventListener('mouseenter', this.mouseenterHandler_);\n            this.input.addEventListener('mouseleave', this.mouseleaveHandler_);\n        }\n        removeEventListeners_() {\n            this.value_.emitter.off('change', this.valueChangedHandler_.bind(this));\n            this.input.removeEventListener('dragenter', this.dragenterHandler_);\n            this.input.removeEventListener('dragleave', this.dragleaveHandler_);\n            this.input.removeEventListener('mouseenter', this.mouseenterHandler_);\n            this.input.removeEventListener('mouseleave', this.mouseleaveHandler_);\n        }\n        valueChangedHandler_() {\n            this.refresh_();\n        }\n        dragenterHandler_(event) {\n            if (event.dataTransfer &&\n                event.dataTransfer.items[0] &&\n                event.dataTransfer.items[0].type.includes('image')) {\n                this.image_.style.opacity = '0';\n                this.label_.style.opacity = '1';\n            }\n        }\n        dragleaveHandler_() {\n            if (this.value_.rawValue.src) {\n                this.image_.style.opacity = '1';\n                this.label_.style.opacity = '0';\n            }\n        }\n        mouseenterHandler_() {\n            this.container_.style.opacity = '0.5';\n        }\n        mouseleaveHandler_() {\n            this.container_.style.opacity = '1';\n        }\n    }\n\n    // Custom controller class should implement `Controller` interface\n    class PluginController$1 {\n        constructor(doc, config) {\n            // Receive the bound value from the plugin\n            this.value = config.value;\n            this.params = config.params;\n            // and also view props\n            this.viewProps = config.viewProps;\n            this.viewProps.handleDispose(() => {\n                this.removeEventListeners_();\n            });\n            // Create a custom view\n            this.view = new PluginView$1(doc, {\n                value: this.value,\n                viewProps: this.viewProps,\n                params: this.params,\n            });\n            // Bind\n            this.bindAll_();\n            // Events\n            this.setupEventListeners_();\n        }\n        bindAll_() {\n            this.inputHandler_ = this.inputHandler_.bind(this);\n        }\n        setupEventListeners_() {\n            this.view.input.addEventListener('input', this.inputHandler_);\n        }\n        removeEventListeners_() {\n            this.view.input.removeEventListener('input', this.inputHandler_);\n        }\n        inputHandler_() {\n            const file = this.view.input.files ? this.view.input.files[0] : null;\n            if (!file)\n                return;\n            const image = new Image();\n            image.src = URL.createObjectURL(file);\n            image.id = file.name;\n            const loadHandler = () => {\n                image.removeEventListener('load', loadHandler);\n                this.value.rawValue = image;\n            };\n            image.addEventListener('load', loadHandler);\n        }\n    }\n\n    // NOTE: You can see JSDoc comments of `InputBindingPlugin` for details about each property\n    //\n    // `InputBindingPlugin<In, Ex, P>` means...\n    // - The plugin receives the bound value as `Ex`,\n    // - converts `Ex` into `In` and holds it\n    // - P is the type of the parsed parameters\n    //\n    const PluginImageInput = {\n        id: 'image-input',\n        type: 'input',\n        css: '.tp-tmpv{display:flex;flex-direction:column;overflow:hidden;position:relative;background-color:var(--bs-bg)}.tp-tmpv.tp-v-disabled{opacity:.5}.tp-tmpv_label{display:flex;justify-content:center;align-items:center;position:absolute;left:0;top:0;bottom:0;right:0;margin:auto;text-align:center;width:100%;pointer-events:none;color:var(--in-fg);font-size:.9em;line-height:.9;opacity:.5}.tp-tmpv_container{position:relative;background-color:var(--in-bg);border-radius:var(--elm-br);overflow:hidden}.tp-tmpv_head{display:none;align-items:center;width:100%;height:2em;margin-bottom:4px;background-color:var(--in-bg-a);border-radius:var(--elm-br);white-space:nowrap}.tp-tmpv_monitor{margin-top:1px;font-size:.9em;line-height:.9;opacity:.5;padding-left:4px;color:var(--in-fg)}.tp-tmpv_input{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0;padding:0;cursor:pointer}.tp-tmpv input::-webkit-file-upload-button{display:none}',\n        accept(exValue, params) {\n            // Return null if underfined\n            if (!exValue)\n                return null;\n            // Return null if not HTML Element\n            if (!(exValue instanceof HTMLImageElement))\n                return null;\n            // Parse parameters object\n            const result = parseParams(params, {\n                // `view` option may be useful to provide a custom control for primitive values\n                extensions: ParamsParsers.optional.string,\n                objectFit: ParamsParsers.optional.string,\n                height: ParamsParsers.optional.number,\n                showMonitor: ParamsParsers.optional.boolean,\n                label: ParamsParsers.required.string,\n                view: ParamsParsers.required.constant('image'),\n            });\n            if (!result) {\n                return null;\n            }\n            // Return a typed value and params to accept the user input\n            return {\n                initialValue: exValue,\n                params: result,\n            };\n        },\n        binding: {\n            reader(_args) {\n                return (exValue) => {\n                    return exValue instanceof HTMLImageElement ? exValue : new Image();\n                };\n            },\n            writer(_args) {\n                return (target, inValue) => {\n                    // Use `target.write()` to write the primitive value to the target,\n                    // or `target.writeProperty()` to write a property of the target\n                    target.write(inValue);\n                };\n            },\n        },\n        controller(args) {\n            // Create a controller for the plugin\n            return new PluginController$1(args.document, {\n                value: args.value,\n                viewProps: args.viewProps,\n                params: args.params,\n            });\n        },\n    };\n\n    // Create a class name generator from the view name\n    // ClassName('tmp') will generate a CSS class name like `tp-tmpv`\n    const className = ClassName('tmp');\n    // Custom view class should implement `View` interface\n    class PluginView {\n        constructor(doc, config) {\n            // Params\n            this.params_ = config.params;\n            // Receive the bound value from the controller\n            this.value_ = config.value;\n            // Init id for monitor\n            this.value_.rawValue.id = this.value_.rawValue.src;\n            // Extensions\n            this.extensions_ =\n                this.params_.extensions || '.mp4, .mov, .mpeg, .ogg, .webm, .mkv, .avi';\n            // Create a root element for the plugin\n            this.element = this.createElement_(doc);\n            // Bind view props to the element\n            config.viewProps.bindClassModifiers(this.element);\n            // Header\n            this.head_ = this.createHead_(doc);\n            this.element.appendChild(this.head_);\n            this.monitor_ = this.createMonitor_(doc);\n            this.head_.appendChild(this.monitor_);\n            // Container\n            this.container_ = this.createContainer_(doc);\n            this.element.appendChild(this.container_);\n            // Input\n            this.input = this.createInput_(doc);\n            this.container_.appendChild(this.input);\n            // Label\n            this.label_ = this.createLabel_(doc);\n            this.container_.appendChild(this.label_);\n            // Image\n            this.video_ = this.createVideo_(doc);\n            this.container_.appendChild(this.video_);\n            // Bind\n            this.bindAll_();\n            // Events\n            this.setupEventListeners_();\n            // Apply the initial value\n            this.refresh_();\n            // Dispose\n            config.viewProps.handleDispose(() => {\n                this.removeEventListeners_();\n            });\n        }\n        refresh_() {\n            // Show Image in monitor\n            this.video_.setAttribute('src', this.value_.rawValue.src);\n            // Reset opacity\n            if (this.value_.rawValue.src) {\n                this.video_.style.opacity = '1';\n                this.label_.style.opacity = '0';\n            }\n            else {\n                this.label_.style.opacity = '1';\n            }\n            // Apply image id\n            this.monitor_.innerHTML = this.value_.rawValue.id;\n            // Display monitor\n            if (this.value_.rawValue.id && this.params_.showMonitor) {\n                this.head_.style.display = 'flex';\n            }\n        }\n        createElement_(doc) {\n            const element = doc.createElement('div');\n            element.classList.add(className());\n            element.style.position = 'relative';\n            if (this.params_.height)\n                element.style.height = `${this.params_.height}px`;\n            return element;\n        }\n        createContainer_(doc) {\n            const container = doc.createElement('div');\n            container.classList.add(className('container'));\n            if (this.params_.height)\n                container.style.height = `${this.params_.height}px`;\n            return container;\n        }\n        createHead_(doc) {\n            const head = doc.createElement('div');\n            head.classList.add(className('head'));\n            if (this.value_.rawValue.id && this.params_.showMonitor)\n                head.style.display = 'flex';\n            return head;\n        }\n        createMonitor_(doc) {\n            const monitor = doc.createElement('div');\n            monitor.classList.add(className('monitor'));\n            monitor.innerHTML = this.value_.rawValue.id;\n            return monitor;\n        }\n        createInput_(doc) {\n            const input = doc.createElement('input');\n            input.classList.add(className('input'));\n            input.setAttribute('id', 'image');\n            input.setAttribute('type', 'file');\n            input.setAttribute('accept', this.extensions_);\n            return input;\n        }\n        createLabel_(doc) {\n            const label = doc.createElement('label');\n            label.setAttribute('for', 'image');\n            label.classList.add(className('label'));\n            label.innerHTML = '<span>Import video</span>';\n            return label;\n        }\n        createVideo_(doc) {\n            const video = doc.createElement('video');\n            video.setAttribute('muted', 'true');\n            video.setAttribute('playsinline', 'true');\n            video.setAttribute('autoplay', 'true');\n            video.setAttribute('loop', 'true');\n            video.style.opacity = '0';\n            video.style.position = 'absolute';\n            video.style.pointerEvents = 'none';\n            video.style.left = '0';\n            video.style.top = '0';\n            video.style.width = '100%';\n            video.style.height = '100%';\n            video.style.objectFit = 'cover';\n            video.style.objectFit = this.params_.objectFit || 'cover';\n            return video;\n        }\n        bindAll_() {\n            this.valueChangedHandler_ = this.valueChangedHandler_.bind(this);\n            this.dragenterHandler_ = this.dragenterHandler_.bind(this);\n            this.dragleaveHandler_ = this.dragleaveHandler_.bind(this);\n            this.mouseenterHandler_ = this.mouseenterHandler_.bind(this);\n            this.mouseleaveHandler_ = this.mouseleaveHandler_.bind(this);\n        }\n        setupEventListeners_() {\n            this.value_.emitter.on('change', this.valueChangedHandler_);\n            this.input.addEventListener('dragenter', this.dragenterHandler_);\n            this.input.addEventListener('dragleave', this.dragleaveHandler_);\n            this.input.addEventListener('mouseenter', this.mouseenterHandler_);\n            this.input.addEventListener('mouseleave', this.mouseleaveHandler_);\n        }\n        removeEventListeners_() {\n            this.value_.emitter.off('change', this.valueChangedHandler_.bind(this));\n            this.input.removeEventListener('dragenter', this.dragenterHandler_);\n            this.input.removeEventListener('dragleave', this.dragleaveHandler_);\n            this.input.removeEventListener('mouseenter', this.mouseenterHandler_);\n            this.input.removeEventListener('mouseleave', this.mouseleaveHandler_);\n        }\n        valueChangedHandler_() {\n            this.refresh_();\n        }\n        dragenterHandler_(event) {\n            if (event.dataTransfer &&\n                event.dataTransfer.items[0] &&\n                event.dataTransfer.items[0].type.includes('video')) {\n                this.video_.style.opacity = '0';\n                this.label_.style.opacity = '1';\n            }\n        }\n        dragleaveHandler_() {\n            if (this.value_.rawValue.src) {\n                this.video_.style.opacity = '1';\n                this.label_.style.opacity = '0';\n            }\n        }\n        mouseenterHandler_() {\n            this.container_.style.opacity = '0.5';\n        }\n        mouseleaveHandler_() {\n            this.container_.style.opacity = '1';\n        }\n    }\n\n    // Custom controller class should implement `Controller` interface\n    class PluginController {\n        constructor(doc, config) {\n            // Receive the bound value from the plugin\n            this.value = config.value;\n            this.params = config.params;\n            // and also view props\n            this.viewProps = config.viewProps;\n            this.viewProps.handleDispose(() => {\n                this.removeEventListeners_();\n            });\n            // Create a custom view\n            this.view = new PluginView(doc, {\n                value: this.value,\n                viewProps: this.viewProps,\n                params: this.params,\n            });\n            // Bind\n            this.bindAll_();\n            // Events\n            this.setupEventListeners_();\n        }\n        bindAll_() {\n            this.inputHandler_ = this.inputHandler_.bind(this);\n        }\n        setupEventListeners_() {\n            this.view.input.addEventListener('input', this.inputHandler_);\n        }\n        removeEventListeners_() {\n            this.view.input.removeEventListener('input', this.inputHandler_);\n        }\n        inputHandler_() {\n            const file = this.view.input.files ? this.view.input.files[0] : null;\n            if (!file)\n                return;\n            const video = document.createElement('video');\n            video.src = URL.createObjectURL(file);\n            video.id = file.name;\n            const loadHandler = () => {\n                video.removeEventListener('canplay', loadHandler);\n                this.value.rawValue = video;\n            };\n            video.addEventListener('canplay', loadHandler);\n        }\n    }\n\n    // NOTE: You can see JSDoc comments of `InputBindingPlugin` for details about each property\n    //\n    // `InputBindingPlugin<In, Ex, P>` means...\n    // - The plugin receives the bound value as `Ex`,\n    // - converts `Ex` into `In` and holds it\n    // - P is the type of the parsed parameters\n    //\n    const PluginVideoInput = {\n        id: 'video-input',\n        type: 'input',\n        css: '.tp-tmpv{display:flex;flex-direction:column;overflow:hidden;position:relative;background-color:var(--bs-bg)}.tp-tmpv.tp-v-disabled{opacity:.5}.tp-tmpv_label{display:flex;justify-content:center;align-items:center;position:absolute;left:0;top:0;bottom:0;right:0;margin:auto;text-align:center;width:100%;pointer-events:none;color:var(--in-fg);font-size:.9em;line-height:.9;opacity:.5}.tp-tmpv_container{position:relative;background-color:var(--in-bg);border-radius:var(--elm-br);overflow:hidden}.tp-tmpv_head{display:none;align-items:center;width:100%;height:2em;margin-bottom:4px;background-color:var(--in-bg-a);border-radius:var(--elm-br);white-space:nowrap}.tp-tmpv_monitor{margin-top:1px;font-size:.9em;line-height:.9;opacity:.5;padding-left:4px;color:var(--in-fg)}.tp-tmpv_input{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0;padding:0;cursor:pointer}.tp-tmpv input::-webkit-file-upload-button{display:none}',\n        accept(exValue, params) {\n            // Return null if underfined\n            if (!exValue)\n                return null;\n            // Return null if not HTML Element\n            if (!(exValue instanceof HTMLVideoElement))\n                return null;\n            // Parse parameters object\n            const result = parseParams(params, {\n                // `view` option may be useful to provide a custom control for primitive values\n                extensions: ParamsParsers.optional.string,\n                objectFit: ParamsParsers.optional.string,\n                height: ParamsParsers.optional.number,\n                showMonitor: ParamsParsers.optional.boolean,\n                label: ParamsParsers.required.string,\n                view: ParamsParsers.required.constant('video'),\n            });\n            if (!result) {\n                return null;\n            }\n            // Return a typed value and params to accept the user input\n            return {\n                initialValue: exValue,\n                params: result,\n            };\n        },\n        binding: {\n            reader(_args) {\n                return (exValue) => {\n                    return exValue instanceof HTMLVideoElement\n                        ? exValue\n                        : document.createElement('video');\n                };\n            },\n            writer(_args) {\n                return (target, inValue) => {\n                    // Use `target.write()` to write the primitive value to the target,\n                    // or `target.writeProperty()` to write a property of the target\n                    target.write(inValue);\n                };\n            },\n        },\n        controller(args) {\n            // Create a controller for the plugin\n            return new PluginController(args.document, {\n                value: args.value,\n                viewProps: args.viewProps,\n                params: args.params,\n            });\n        },\n    };\n\n    // Export your plugin(s) as constant `plugins`\n    const plugins = [PluginImageInput, PluginVideoInput];\n\n    exports.plugins = plugins;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],
  "mappings": "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",
  "names": ["exports", "result"]
}
